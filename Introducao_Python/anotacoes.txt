Python
-> Linguagem de programação de alto nível;
-> Criada por Guido Van Rossum em 1989 no CWI;
-> Fortemente tipada;
-> Interpretada e orientada a objetos;
-> Linguagem de scripts;

A linguagem pode ser usada no desenvolvimento web (Django e Flask), desenvolvimento desktop (Tkitnter, PyQT, Kivy), ciência de dados (SciPy, Pandas), automação de tarefas.


Aula 2

Operadores
-> Aritiméticos
	Soma: +
	Subtração: -
	Divisão: /
	Divisão Inteira: //
	Multiplicação: *
	Módulo: %
	Exponenciação: **

-> Atribuição
	Atribuição: =
	Incremento: +=
	Decremento: -=
	Multiplicação vezes 1: *=
	Divisao por 1: /=
	Módulo por 1: %=

-> Comparação
	Maior que: >
	Maior ou Igual a: >=
	Menor que: <
	Menor ou Igual a: <=
	Igual a: ==
	Diferente de: !=

-> Lógicos
	E: and (todas as condições sendo True )
	Ou: or (uma das condições sendo True ok)
	Não: not (inverte o resultado)

-> Identidade
	is: compara se as variáveis comparadas forem do mesmo objeto
	is not: retorna True se as variáveis comparadas não forem o mesmo objeto

-> Associação
	in: Retorna True caso o valor seja encontrado
	not in: Retorna True caso o valor não seja encontrado

Condições em python
	If: condições simples
		if condição:
			instrução

	If/Else: condições compostas
		if condição:
			instrução caso true
		else:
			instrução caso false

	Elif: condições aninhadas
		if condição:
			intrução caso true prim
		elif condição2:
			instrução caso true seg
		else: 
			instrução caso tudo false

As instruções contidas nas condições possuem escopo de bloco

Laços de Repetição

For
O comando for é utilizado quando se sabe o limite máximo para a repetição
ex: for x in range(100):
	print(x)
for variavel in range(inicio, fim):

While
enquanto
while variavel < condicao


Listas e Tuplas

Listas
Listas são mutaveis e podem ser modificadas durante a execução do programa
Declarada entre colchetes
Em uma lista podem existir diferentes tipos de dados mas não é recomendável

Tuplas
As tuplas são imutáveis durante a execução do programa 
Declaradas entres parenteses.


A melhor maneira de acessar os elementos de uma lista ou tupla é utilizando os laços.
Existem diversas funções e operações que envolve lista. Sempre que for usa-las e tiver duvida acessar a W3Schools

Manipulação de conjuntos e subconjuntos 
O que são? 
Conjuntos são diferentes dos dicionários que eu conheço.
Para cria-los utiliza-se as chaves.
São do tipo set.
Não permite duplicidade de valores. 
É possível modificar os elementos dentro de um conjunto  adicionando ou removendo. Além de diversas outras operações que envolvem esse tipo de vetor.


Métodos, Funções e Classes

Funções retornam valores e métodos não e são criados com a palavra reservada def
ex: def soma(a, b):
	return a + b
Eles nos auxiliam na reciclagem de códigos poupando tempo e esforço podendo chamar os métodos e funções a quarquer momento no código. 

As classes são declaradas com a palavra Reservada Class (sempre com letra maiscula nome da classe). É por meio dela que o python tem a POO.
É possível adicionar nelas métodos e variáveis (atributos. Para adicionar os atributos das classes em python utiliza-se 'def__init__(self)' para inicializa-los.
Esse método é usado na instanciação das classes.
o self referencia o próprio objeto. 

Para instanciar a classe é quase igual em java: 
	calculadora = Calculadora(10, 2)
As classes podem ser criadas em arquivos a parte e serem importadas em outros arquivos.
Ainda sibre elas, também é possível não declarar os valores no construtor e colocar parametros apenas nos métodos.

ex: 
class Tv:
    def __init__(self):
        self.ligada = False
        self.canal = 5

    def power(self):
        if self.ligada:
            self.ligada = False
        else:
            self.ligada = True

    def aumentaCanal(self):
        if self.ligada:
            self.canal += 1

    def diminuiCanal(self):
        if self.ligada:
            self.canal -= 1


televisao = Tv()
print(f'A televisão esta ligada? \n{televisao.ligada}')
televisao.power()
print(f'Esta ligada agora? \n{televisao.ligada}')
print(f'Canal Atual: {televisao.canal}')
televisao.aumentaCanal()
televisao.aumentaCanal()
print(f'Canal Atual: {televisao.canal}')
televisao.diminuiCanal()
print(f'Canal Atual: {televisao.canal}')

Módulos e Funções Anônimas (lambda)
Um módulo nada mais é que um arquivo .py e esse módulos podem interagir entre eles, inclusive pelo console do python. 
	=> sempre utilizar o main nas classes p/ realizar testes

Uma função anônima, ou função lambda, é uma função que simplifica funções que serão utilizadas muitas vezes nos códigos. Podemos contruir funções em apenas uma linha.
ex: contador_letras = lambda lista: [len(x) for x in lista]
A lambda só é utilizada para funções que sejam apenas de uma linha

Gerar, copiar, mover e ler informações de arquivos externos
Para criar um arquivo utiliza-se a palavra reservada open
ex: open('teste.txt', 'w')
É possível criar os arquivos e utiliza-los referenciando sua localização tanto para criação quanto para manipulação

Data e Hora em Python


Try, Except, Else e Finally
As execeções em python são utilizadas para tratar erros em códigos.
As exceções podem ser utilizadas para informar os erros ocorridos ou realizar alguma alteração no bloco de código a fim de evitar que os erros ocorram.
O else serve para executar os códigos que devem ocorrer quando não ocorrer nenhuma exceção.
E por fim o o finally é o que sempre deve ser executado caso ocorra ou não alguma exception

Pacotes em Python
Os pacotes em Python são bibliotecas que garantem maior organização nos códigos e ajudando na reutilização de código.
Para instalarmos pacotes novos no nosso python utilizamos o comando pip install no terminal python
